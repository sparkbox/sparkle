@use '../../../index' as *;
@use '../../../sass/data';

// Assert [output]
@include describe('Output Expect') {
  @include it('Compares math output properly') {
    @include assert {
      @include output {
        -property1: 0.1 + 0.2;
        -property2: (1 / 3);
      }

      @include expect {
        -property1: 0.3;
        -property2: 0.3333333333;
      }
    }
  }

  @include it('Matches output and expected selector patterns') {
    @include assert {
      @include output {
        -property: value;

        @media (min-width: 30em) {
          -prop: val;

          @at-root {
            .selector {
              -prop: val;
            }
          }
        }
      }

      @include expect {
        -property: value;
        @media (min-width: 30em) {
          -prop: val;
          @at-root {
            .selector {
              -prop: val;
            }
          }
        }
      }
    }
  }
}

@include describe('Output Contains') {
  @include it('Contains sub-string') {
    @include assert {
      @include output {
        height: 10px;
        width: 20px;
      }

      @include contains {
        height: 10px;
      }
    }
  }

  @include it('Contains nested selector block') {
    @include assert {
      @include output {
        height: 20px;

        .class {
          height: 10px;
        }
        .other-class {
          height: 10px;
        }
      }

      @include contains {
        .class {
          height: 10px;
        }
      }
    }
  }

  @include it('Can be used with nested classes') {
    @include assert {
      @include output {
        height: 20px;
        .class {
          height: 10px;
          .other-class {
            height: 10px;
          }
        }
      }

      @include contains {
        .class {
          .other-class {
            height: 10px;
          }
        }
      }
    }
  }

  @include it('Can be used with nested @media queries') {
    @include assert {
      @include output {
        .class {
          height: 20px;
        }
        @media (min-width: 30em) {
          @media (min-width: 40em) {
            .selector {
              height: 10px;
            }
            .selector2 {
              height: 10px;
            }
          }
          .selector3 {
            height: 10px;
          }
        }
      }

      @include contains {
        @media (min-width: 30em) {
          @media (min-width: 40em) {
            .selector2 {
              height: 10px;
            }
          }
        }
      }
    }
  }

  @include it('Can be used with @at-root') {
    @include assert {
      @include output {
        @at-root {
          .selector {
            height: 10px;
          }
        }
      }

      @include contains {
        @at-root {
          .selector {
            height: 10px;
          }
        }
      }
    }
  }

  @include it('Can be used for all selector types') {
    @include assert {
      @include output {
        .selector {
          -prop: val;
        }
        #id {
          -prop: value1;
        }
        div {
          -prop: value2;
          min-height: 20px;
          max-height: 30px;
        }

        input[type='text'] {
          color: rebeccapurple;
        }

        * + * {
          color: red;
          display: none;
        }

        body > h1 {
          font-weight: bold;
        }

        i::before {
          -prop: value3;
        }

        div ~ p {
          color: green;
        }

        i:not(.italic) {
          text-decoration: underline;
          --custom: val;
        }
      }

      @include contains {
        .selector {
          -prop: val;
        }

        div {
          max-height: 30px;
        }

        body > h1 {
          font-weight: bold;
        }

        * + * {
          display: none;
        }

        i:not(.italic) {
          text-decoration: underline;
        }
      }
    }
  }

  @include it('Can assert multiple properties within a selector') {
    @include assert {
      @include output {
        .selector {
          width: 10px;
          min-height: 5px;
          max-height: 20px;
        }
      }

      @include contains {
        .selector {
          width: 10px;
          max-height: 20px;
        }
      }
    }
  }
}
